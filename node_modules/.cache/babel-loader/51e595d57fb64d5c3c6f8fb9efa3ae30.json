{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\\\u0412\\u0438\\u043A\\u0442\\u043E\\u0440_\\u041C\\\\Desktop\\\\Phytin\\\\single_page\\\\singpe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\\\u0412\\u0438\\u043A\\u0442\\u043E\\u0440_\\u041C\\\\Desktop\\\\Phytin\\\\single_page\\\\singpe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u0412\\u0438\\u043A\\u0442\\u043E\\u0440_\\u041C\\\\Desktop\\\\Phytin\\\\single_page\\\\singpe\\\\src\\\\main.js\";\nimport React, { useMemo, useState, useEffect } from \"react\";\nimport Card from \"./card\";\nimport Pages_count from \"./pages\";\nimport Maxshow from \"./maxShow\";\nfunction Main(cars_array) {\n  var _this = this;\n  console.log({\n    cars_array: cars_array\n  });\n  var count = [0, 6];\n  var _useState = useState(cars_array.slice(0, 6)),\n    _useState2 = _slicedToArray(_useState, 2),\n    cars = _useState2[0],\n    setCars = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    show = _useState4[0],\n    setShow = _useState4[1];\n  var pages = Math.ceil(cars_array.length / 6); //Вычисляем количество страниц\n\n  function createPages() {\n    //Функция,вычисляющая массив с индексами страницц\n    var result = [];\n    for (var i = 1; i <= pages; i++) {\n      result.push(i);\n    }\n    return result;\n  }\n  var res = createPages(); //Вычисляем массив с индексами страницц\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main_content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 2\n    }\n  }, _toConsumableArray(cars.slice(count[0], count[1])).map(function (item, index) {\n    return /*#__PURE__*/React.createElement(Card, {\n      info: item,\n      key: index,\n      setShow: setShow,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 59\n      }\n    });\n  }), /*#__PURE__*/React.createElement(Maxshow, {\n    show: show,\n    setShow: setShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pages_counter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(Pages_count, {\n    pag: res,\n    setCars: setCars,\n    cars_array: cars_array,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  }))));\n}\nexport default Main;","map":{"version":3,"names":["React","useMemo","useState","useEffect","Card","Pages_count","Maxshow","Main","cars_array","console","log","count","slice","cars","setCars","show","setShow","pages","Math","ceil","length","createPages","result","i","push","res","map","item","index"],"sources":["C:/Users/Виктор_М/Desktop/Phytin/single_page/singpe/src/main.js"],"sourcesContent":["import React,{useMemo, useState,useEffect} from \"react\";\r\nimport Card from \"./card\";\r\nimport Pages_count from \"./pages\";\r\nimport Maxshow from \"./maxShow\";\r\n\r\nfunction Main(cars_array) {\r\n  \r\nconsole.log({cars_array})\r\n   const count=[0,6] \r\n    const [cars,setCars]=useState(cars_array.slice(0,6))\r\n    const [show, setShow] = useState({});\r\n    let pages=Math.ceil(cars_array.length/6)    //Вычисляем количество страниц\r\n  \r\n    function createPages(){               //Функция,вычисляющая массив с индексами страницц\r\n      let result=[]\r\n       for(let i=1;i<=pages;i++){\r\n        result.push(i)\r\n       }\r\n     return result\r\n    }\r\n  \r\nlet res=createPages()                   //Вычисляем массив с индексами страницц\r\n\r\n  return (\r\n  <>\r\n  <div className=\"main\">\r\n <div className=\"main_content\" >\r\n    {[...cars.slice(count[0],count[1])].map((item,index)=><Card info={item} key={index} setShow={setShow} />)}\r\n    <Maxshow show={show} setShow={setShow}/>\r\n </div>\r\n <div className=\"pages_counter\">\r\n  <Pages_count  pag={res} setCars={setCars} cars_array={cars_array}  />\r\n  </div>\r\n \r\n </div>\r\n \r\n </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAEC,OAAO,EAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AACvD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,WAAW,MAAM,SAAS;AACjC,OAAOC,OAAO,MAAM,WAAW;AAE/B,SAASC,IAAI,CAACC,UAAU,EAAE;EAAA;EAE1BC,OAAO,CAACC,GAAG,CAAC;IAACF,UAAU,EAAVA;EAAU,CAAC,CAAC;EACtB,IAAMG,KAAK,GAAC,CAAC,CAAC,EAAC,CAAC,CAAC;EAAA,gBACKT,QAAQ,CAACM,UAAU,CAACI,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IAAA;IAA7CC,IAAI;IAACC,OAAO;EAAA,iBACKZ,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAA;IAA7Ba,IAAI;IAAEC,OAAO;EACpB,IAAIC,KAAK,GAACC,IAAI,CAACC,IAAI,CAACX,UAAU,CAACY,MAAM,GAAC,CAAC,CAAC,EAAI;;EAE5C,SAASC,WAAW,GAAE;IAAgB;IACpC,IAAIC,MAAM,GAAC,EAAE;IACZ,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,IAAEN,KAAK,EAACM,CAAC,EAAE,EAAC;MACxBD,MAAM,CAACE,IAAI,CAACD,CAAC,CAAC;IACf;IACF,OAAOD,MAAM;EACd;EAEJ,IAAIG,GAAG,GAACJ,WAAW,EAAE,EAAmB;;EAEtC,oBACA,uDACA;IAAK,SAAS,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACtB;IAAK,SAAS,EAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACzB,mBAAIR,IAAI,CAACD,KAAK,CAACD,KAAK,CAAC,CAAC,CAAC,EAACA,KAAK,CAAC,CAAC,CAAC,CAAC,EAAEe,GAAG,CAAC,UAACC,IAAI,EAACC,KAAK;IAAA,oBAAG,oBAAC,IAAI;MAAC,IAAI,EAAED,IAAK;MAAC,GAAG,EAAEC,KAAM;MAAC,OAAO,EAAEZ,OAAQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG;EAAA,EAAC,eACzG,oBAAC,OAAO;IAAC,IAAI,EAAED,IAAK;IAAC,OAAO,EAAEC,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,CACrC,eACN;IAAK,SAAS,EAAC,eAAe;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC7B,oBAAC,WAAW;IAAE,GAAG,EAAES,GAAI;IAAC,OAAO,EAAEX,OAAQ;IAAC,UAAU,EAAEN,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAI,CAC/D,CAED,CAEH;AAEJ;AAEA,eAAeD,IAAI"},"metadata":{},"sourceType":"module"}