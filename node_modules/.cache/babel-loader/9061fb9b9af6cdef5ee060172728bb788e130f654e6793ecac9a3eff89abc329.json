{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0412\\u0438\\u043A\\u0442\\u043E\\u0440_\\u041C\\\\Desktop\\\\Phytin\\\\single_page\\\\singpe\\\\src\\\\components\\\\card.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Card(_ref) {\n  _s();\n  let {\n    info,\n    show,\n    setShow\n  } = _ref;\n  let imager = useRef();\n  let images = [...info.photos];\n  const [img, setImg] = useState(images[0]);\n  useEffect(() => {\n    console.log(\"Произошла Перерисовка\");\n    imager.current.addEventListener('mouseover', changeImg);\n    imager.current.addEventListener('mouseout', stopchangeImg);\n    imager.current.addEventListener('click', () => setShow(info));\n  }, []);\n  let interval;\n  Math.round(Math.random() * (images.length - 1));\n  function changeImg() {\n    let count = 0;\n    interval = setInterval(() => {\n      count > images.length - 2 ? count = 0 : count++;\n      setImg(images[count]);\n    }, 500);\n  }\n  function stopchangeImg() {\n    clearInterval(interval);\n    setImg(images[0]);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3\",\n      ref: imager,\n      \"data-bs-toggle\": \"modal\",\n      \"data-bs-target\": \"#exampleModal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flexiblecard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card_info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              class: \"img-fluid rounded-start cardimg\",\n              src: img,\n              alt: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"cardititle\",\n              children: [info.marka.toUpperCase(), \"  \", info.model]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"cardititle;\",\n              children: [info.year, \" / \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: info.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 50\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"cardtext\",\n            children: info.information\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n_s(Card, \"9RO53ryULljJf31OMP/fGwUddcY=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Card","info","show","setShow","imager","images","photos","img","setImg","console","log","current","addEventListener","changeImg","stopchangeImg","interval","Math","round","random","length","count","setInterval","clearInterval","marka","toUpperCase","model","year","price","information"],"sources":["C:/Users/Виктор_М/Desktop/Phytin/single_page/singpe/src/components/card.js"],"sourcesContent":["import React,{useRef,useEffect,useState} from \"react\";\r\n\r\n\r\nfunction Card({info,show,setShow}){\r\n \r\n  let imager=useRef()\r\n  let images=[...info.photos]\r\n  const[img,setImg]=useState(images[0])\r\n  useEffect(()=>{\r\n    console.log(\"Произошла Перерисовка\")\r\n  imager.current.addEventListener('mouseover', changeImg)\r\n  imager.current.addEventListener('mouseout', stopchangeImg)\r\n  imager.current.addEventListener('click', ()=>setShow(info))\r\n  }\r\n  ,[])\r\n  let interval\r\n  Math.round(Math.random()*(images.length-1))\r\n      function changeImg(){\r\n        let count=0 \r\n        interval=setInterval(()=>{\r\n          count>images.length-2?count=0:count++\r\n          setImg(images[count])\r\n        },500)\r\n        }\r\n  function stopchangeImg(){\r\n    clearInterval(interval)\r\n    setImg(images[0])\r\n  }\r\n  \r\nreturn(<>\r\n  \r\n<div className=\"card mb-3\"  ref={imager}  data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\"  >\r\n\r\n  <div className=\"flexiblecard\">\r\n  \r\n  <div className=\"card_info\">\r\n    <div >\r\n      <img  class=\"img-fluid rounded-start cardimg\"  src={img}      alt=\"...\"></img>\r\n    </div>\r\n    <div >\r\n        <h5 className=\"cardititle\">{info.marka.toUpperCase()}  {info.model}</h5>\r\n        <p className=\"cardititle;\">{info.year} / <b>{info.price}</b></p> \r\n    </div>\r\n  </div>\r\n  <div>\r\n  <p className=\"cardtext\">{info.information}</p> \r\n  </div>\r\n  \r\n  </div>\r\n</div>\r\n</>\r\n    )   \r\n}\r\nexport default Card\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,MAAM,EAACC,SAAS,EAACC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAGtD,SAASC,IAAI,OAAqB;EAAA;EAAA,IAApB;IAACC,IAAI;IAACC,IAAI;IAACC;EAAO,CAAC;EAE/B,IAAIC,MAAM,GAACP,MAAM,EAAE;EACnB,IAAIQ,MAAM,GAAC,CAAC,GAAGJ,IAAI,CAACK,MAAM,CAAC;EAC3B,MAAK,CAACC,GAAG,EAACC,MAAM,CAAC,GAACT,QAAQ,CAACM,MAAM,CAAC,CAAC,CAAC,CAAC;EACrCP,SAAS,CAAC,MAAI;IACZW,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACtCN,MAAM,CAACO,OAAO,CAACC,gBAAgB,CAAC,WAAW,EAAEC,SAAS,CAAC;IACvDT,MAAM,CAACO,OAAO,CAACC,gBAAgB,CAAC,UAAU,EAAEE,aAAa,CAAC;IAC1DV,MAAM,CAACO,OAAO,CAACC,gBAAgB,CAAC,OAAO,EAAE,MAAIT,OAAO,CAACF,IAAI,CAAC,CAAC;EAC3D,CAAC,EACA,EAAE,CAAC;EACJ,IAAIc,QAAQ;EACZC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAEb,MAAM,CAACc,MAAM,GAAC,CAAC,CAAC,CAAC;EACvC,SAASN,SAAS,GAAE;IAClB,IAAIO,KAAK,GAAC,CAAC;IACXL,QAAQ,GAACM,WAAW,CAAC,MAAI;MACvBD,KAAK,GAACf,MAAM,CAACc,MAAM,GAAC,CAAC,GAACC,KAAK,GAAC,CAAC,GAACA,KAAK,EAAE;MACrCZ,MAAM,CAACH,MAAM,CAACe,KAAK,CAAC,CAAC;IACvB,CAAC,EAAC,GAAG,CAAC;EACN;EACN,SAASN,aAAa,GAAE;IACtBQ,aAAa,CAACP,QAAQ,CAAC;IACvBP,MAAM,CAACH,MAAM,CAAC,CAAC,CAAC,CAAC;EACnB;EAEF,oBAAO;IAAA,uBAEP;MAAK,SAAS,EAAC,WAAW;MAAE,GAAG,EAAED,MAAO;MAAE,kBAAe,OAAO;MAAC,kBAAe,eAAe;MAAA,uBAE7F;QAAK,SAAS,EAAC,cAAc;QAAA,wBAE7B;UAAK,SAAS,EAAC,WAAW;UAAA,wBACxB;YAAA,uBACE;cAAM,KAAK,EAAC,iCAAiC;cAAE,GAAG,EAAEG,GAAI;cAAM,GAAG,EAAC;YAAK;cAAA;cAAA;cAAA;YAAA;UAAO;YAAA;YAAA;YAAA;UAAA,QAC1E,eACN;YAAA,wBACI;cAAI,SAAS,EAAC,YAAY;cAAA,WAAEN,IAAI,CAACsB,KAAK,CAACC,WAAW,EAAE,EAAC,IAAE,EAACvB,IAAI,CAACwB,KAAK;YAAA;cAAA;cAAA;cAAA;YAAA,QAAM,eACxE;cAAG,SAAS,EAAC,aAAa;cAAA,WAAExB,IAAI,CAACyB,IAAI,EAAC,KAAG;gBAAA,UAAIzB,IAAI,CAAC0B;cAAK;gBAAA;gBAAA;gBAAA;cAAA,QAAK;YAAA;cAAA;cAAA;cAAA;YAAA,QAAI;UAAA;YAAA;YAAA;YAAA;UAAA,QAC9D;QAAA;UAAA;UAAA;UAAA;QAAA,QACF,eACN;UAAA,uBACA;YAAG,SAAS,EAAC,UAAU;YAAA,UAAE1B,IAAI,CAAC2B;UAAW;YAAA;YAAA;YAAA;UAAA;QAAK;UAAA;UAAA;UAAA;QAAA,QACxC;MAAA;QAAA;QAAA;QAAA;MAAA;IAEA;MAAA;MAAA;MAAA;IAAA;EACF,iBACH;AAEH;AAAC,GAjDQ5B,IAAI;AAAA,KAAJA,IAAI;AAkDb,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}