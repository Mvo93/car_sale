{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0412\\u0438\\u043A\\u0442\\u043E\\u0440_\\u041C\\\\Desktop\\\\Phytin\\\\single_page\\\\singpe\\\\src\\\\main.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useEffect } from \"react\";\nimport Card from \"./card\";\nimport Pages_count from \"./pages\";\nimport Maxshow from \"./maxShow\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main(_ref) {\n  _s();\n  let {\n    cars_array\n  } = _ref;\n  const cars_count = cars_array;\n  const [cars, setCars] = useState(cars_count.slice(0, 6));\n  const [show, setShow] = useState({});\n  let pages = Math.ceil(cars_count.length / 6); //Вычисляем количество страниц\n  createPages();\n  function createPages() {\n    //Вычисляем массив с индексами страницц\n    let result = [];\n    for (let i = 1; i <= pages; i++) {\n      result.push(i);\n    }\n    return result;\n  }\n  let res = createPages();\n  function changecars(p) {\n    //Устанавливаем в сет 6 карточек с выбранной страницы\n    setCars(() => cars_count.slice(p * 6, p * 6 + 6));\n  }\n  useEffect(() => console.log(\"show working\"), [show]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_content\",\n        children: [cars.map((item, index) => /*#__PURE__*/_jsxDEV(Card, {\n          info: item,\n          setShow: setShow\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(Maxshow, {\n          show: show,\n          setShow: setShow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pages_counter\",\n        children: /*#__PURE__*/_jsxDEV(Pages_count, {\n          setCars: setCars,\n          pag: res,\n          sedCars: setCars,\n          car_count: cars_count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n_s(Main, \"1LYu5tq+z4fp0lK2anrI87cQHAg=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","Card","Pages_count","Maxshow","Main","cars_array","cars_count","cars","setCars","slice","show","setShow","pages","Math","ceil","length","createPages","result","i","push","res","changecars","p","console","log","map","item","index"],"sources":["C:/Users/Виктор_М/Desktop/Phytin/single_page/singpe/src/main.js"],"sourcesContent":["import React,{useMemo, useState,useEffect} from \"react\";\r\nimport Card from \"./card\";\r\nimport Pages_count from \"./pages\";\r\nimport Maxshow from \"./maxShow\";\r\n\r\nfunction Main({cars_array}) {\r\n    const cars_count=cars_array\r\n    const [cars,setCars]=useState(cars_count.slice(0,6))\r\n    const [show, setShow] = useState({});\r\n    let pages=Math.ceil(cars_count.length/6)    //Вычисляем количество страниц\r\n    createPages()\r\n    function createPages(){               //Вычисляем массив с индексами страницц\r\n      let result=[]\r\n       for(let i=1;i<=pages;i++){\r\n        result.push(i)\r\n       }\r\n     return result\r\n    }\r\n  \r\nlet res=createPages()   \r\nfunction changecars(p){                //Устанавливаем в сет 6 карточек с выбранной страницы\r\nsetCars(()=>cars_count.slice(p*6,(p*6)+6))\r\n\r\n}\r\nuseEffect(()=>console.log(\"show working\"),[show])\r\n\r\n  return (\r\n  <>\r\n  <div className=\"main\">\r\n <div className=\"main_content\">\r\n    {cars.map((item,index)=><Card info={item} key={index} setShow={setShow} />)}\r\n    <Maxshow show={show} setShow={setShow}/>\r\n </div>\r\n <div className=\"pages_counter\">\r\n  <Pages_count setCars={setCars}  pag={res} sedCars={setCars} car_count={cars_count} />\r\n  </div>\r\n \r\n </div>\r\n \r\n </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,OAAO,EAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AACvD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,WAAW,MAAM,SAAS;AACjC,OAAOC,OAAO,MAAM,WAAW;AAAC;AAAA;AAEhC,SAASC,IAAI,OAAe;EAAA;EAAA,IAAd;IAACC;EAAU,CAAC;EACtB,MAAMC,UAAU,GAACD,UAAU;EAC3B,MAAM,CAACE,IAAI,EAACC,OAAO,CAAC,GAACT,QAAQ,CAACO,UAAU,CAACG,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,IAAIa,KAAK,GAACC,IAAI,CAACC,IAAI,CAACR,UAAU,CAACS,MAAM,GAAC,CAAC,CAAC,EAAI;EAC5CC,WAAW,EAAE;EACb,SAASA,WAAW,GAAE;IAAgB;IACpC,IAAIC,MAAM,GAAC,EAAE;IACZ,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,IAAEN,KAAK,EAACM,CAAC,EAAE,EAAC;MACxBD,MAAM,CAACE,IAAI,CAACD,CAAC,CAAC;IACf;IACF,OAAOD,MAAM;EACd;EAEJ,IAAIG,GAAG,GAACJ,WAAW,EAAE;EACrB,SAASK,UAAU,CAACC,CAAC,EAAC;IAAiB;IACvCd,OAAO,CAAC,MAAIF,UAAU,CAACG,KAAK,CAACa,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAC,CAAC,GAAE,CAAC,CAAC,CAAC;EAE1C;EACAtB,SAAS,CAAC,MAAIuB,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,EAAC,CAACd,IAAI,CAAC,CAAC;EAE/C,oBACA;IAAA,uBACA;MAAK,SAAS,EAAC,MAAM;MAAA,wBACtB;QAAK,SAAS,EAAC,cAAc;QAAA,WACzBH,IAAI,CAACkB,GAAG,CAAC,CAACC,IAAI,EAACC,KAAK,kBAAG,QAAC,IAAI;UAAC,IAAI,EAAED,IAAK;UAAa,OAAO,EAAEf;QAAQ,GAAxBgB,KAAK;UAAA;UAAA;UAAA;QAAA,QAAsB,CAAC,eAC3E,QAAC,OAAO;UAAC,IAAI,EAAEjB,IAAK;UAAC,OAAO,EAAEC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QACrC,eACN;QAAK,SAAS,EAAC,eAAe;QAAA,uBAC7B,QAAC,WAAW;UAAC,OAAO,EAAEH,OAAQ;UAAE,GAAG,EAAEY,GAAI;UAAC,OAAO,EAAEZ,OAAQ;UAAC,SAAS,EAAEF;QAAW;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAC/E;IAAA;MAAA;MAAA;MAAA;IAAA;EAED,iBAEH;AAEJ;AAAC,GApCQF,IAAI;AAAA,KAAJA,IAAI;AAsCb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}