{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0412\\u0438\\u043A\\u0442\\u043E\\u0440_\\u041C\\\\Desktop\\\\Phytin\\\\single_page\\\\singpe\\\\src\\\\pages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pages_count(_ref) {\n  _s();\n  let {\n    pag,\n    sedCars,\n    car_count\n  } = _ref;\n  const [page, setPage] = useState([...pag.slice(0, 3)]);\n  function changecars(p) {\n    //Устанавливаем в сет 6 карточек с выбранной страницы\n    sedCars(() => car_count.slice(p * 6, p * 6 + 6));\n    if (pag.includes(p + 1) && p > 0 && p + 1 < pag.length) {\n      console.log(\"ты в иф\");\n      setPage([p, p + 1, p + 2]);\n    } else if (p === 0) setPage([1, 2, 3]);else if (p === pag.length - 1) setPage([pag.length - 2, pag.length - 1, pag.length]);\n  }\n  function change(p) {\n    try {\n      document.querySelector(\".selected_page\").className = \"pages\";\n    } catch {}\n    if (p.className == \"pages\") p.className = \"selected_page\";else p.className = \"pages\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pages\",\n      onClick: event => {\n        change(event.target);\n        changecars(0);\n      },\n      children: \"<\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 1\n    }, this), page.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pages\",\n      onClick: event => {\n        change(event.target);\n        changecars(Number(item) - 1);\n      },\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 26\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pages\",\n      onClick: event => {\n        change(event.target);\n        changecars(pag.length - 1);\n      },\n      children: \">\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 1\n  }, this);\n}\n_s(Pages_count, \"67DKrMFrWuBCBDo+A80+CdDFe4k=\");\n_c = Pages_count;\nvar _c;\n$RefreshReg$(_c, \"Pages_count\");","map":{"version":3,"names":["React","useState","useEffect","Pages_count","pag","sedCars","car_count","page","setPage","slice","changecars","p","includes","length","console","log","change","document","querySelector","className","event","target","map","item","index","Number"],"sources":["C:/Users/Виктор_М/Desktop/Phytin/single_page/singpe/src/pages.js"],"sourcesContent":["import React,{useState,useEffect} from \"react\";\r\n\r\n\r\nexport default function Pages_count({pag,sedCars,car_count}){\r\n    const [page,setPage]=useState([...pag.slice(0,3)])\r\n\r\n \r\n    function changecars(p){                //Устанавливаем в сет 6 карточек с выбранной страницы\r\n     sedCars(()=>car_count.slice(p*6,(p*6)+6))\r\n     if(pag.includes(p+1) && p>0 && p+1<pag.length)  {\r\n        console.log(\"ты в иф\")\r\n     setPage([p,p+1,p+2]) \r\n     }\r\n     else if(p===0) setPage([1,2,3])\r\n     else if(p===pag.length-1) setPage([pag.length-2,pag.length-1,pag.length])\r\n     \r\n    }\r\n    function change(p){\r\n        try{\r\n            document.querySelector(\".selected_page\").className=\"pages\"\r\n        }\r\n        catch{}\r\n        if(p.className==\"pages\") p.className=\"selected_page\"\r\n        else p.className=\"pages\"\r\n    }\r\n    return (\r\n<div>\r\n<button className=\"pages\"  onClick={ (event)=>{ \r\n    change(event.target)\r\n    changecars(0)}\r\n    }>{\"<\"}</button>\r\n {page.map((item,index)=><button key={index} className=\"pages\"  onClick={ (event)=>{ \r\n    change(event.target)\r\n    changecars(Number(item)-1)}\r\n    }>{item}</button>)}\r\n <button  className=\"pages\"  onClick={ (event)=>{ \r\n    change(event.target)\r\n    changecars(pag.length-1)}\r\n    }>{\">\"}</button>\r\n </div>\r\n    )\r\n\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAAC;AAG/C,eAAe,SAASC,WAAW,OAAyB;EAAA;EAAA,IAAxB;IAACC,GAAG;IAACC,OAAO;IAACC;EAAS,CAAC;EACvD,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAACP,QAAQ,CAAC,CAAC,GAAGG,GAAG,CAACK,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;EAGlD,SAASC,UAAU,CAACC,CAAC,EAAC;IAAiB;IACtCN,OAAO,CAAC,MAAIC,SAAS,CAACG,KAAK,CAACE,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAC,CAAC,GAAE,CAAC,CAAC,CAAC;IACzC,IAAGP,GAAG,CAACQ,QAAQ,CAACD,CAAC,GAAC,CAAC,CAAC,IAAIA,CAAC,GAAC,CAAC,IAAIA,CAAC,GAAC,CAAC,GAACP,GAAG,CAACS,MAAM,EAAG;MAC7CC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACzBP,OAAO,CAAC,CAACG,CAAC,EAACA,CAAC,GAAC,CAAC,EAACA,CAAC,GAAC,CAAC,CAAC,CAAC;IACpB,CAAC,MACI,IAAGA,CAAC,KAAG,CAAC,EAAEH,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,MAC1B,IAAGG,CAAC,KAAGP,GAAG,CAACS,MAAM,GAAC,CAAC,EAAEL,OAAO,CAAC,CAACJ,GAAG,CAACS,MAAM,GAAC,CAAC,EAACT,GAAG,CAACS,MAAM,GAAC,CAAC,EAACT,GAAG,CAACS,MAAM,CAAC,CAAC;EAE1E;EACA,SAASG,MAAM,CAACL,CAAC,EAAC;IACd,IAAG;MACCM,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC,CAACC,SAAS,GAAC,OAAO;IAC9D,CAAC,CACD,MAAK,CAAC;IACN,IAAGR,CAAC,CAACQ,SAAS,IAAE,OAAO,EAAER,CAAC,CAACQ,SAAS,GAAC,eAAe,MAC/CR,CAAC,CAACQ,SAAS,GAAC,OAAO;EAC5B;EACA,oBACJ;IAAA,wBACA;MAAQ,SAAS,EAAC,OAAO;MAAE,OAAO,EAAIC,KAAK,IAAG;QAC1CJ,MAAM,CAACI,KAAK,CAACC,MAAM,CAAC;QACpBX,UAAU,CAAC,CAAC,CAAC;MAAA,CACZ;MAAA,UAAE;IAAG;MAAA;MAAA;MAAA;IAAA,QAAU,EAClBH,IAAI,CAACe,GAAG,CAAC,CAACC,IAAI,EAACC,KAAK,kBAAG;MAAoB,SAAS,EAAC,OAAO;MAAE,OAAO,EAAIJ,KAAK,IAAG;QAC/EJ,MAAM,CAACI,KAAK,CAACC,MAAM,CAAC;QACpBX,UAAU,CAACe,MAAM,CAACF,IAAI,CAAC,GAAC,CAAC,CAAC;MAAA,CACzB;MAAA,UAAEA;IAAI,GAH2BC,KAAK;MAAA;MAAA;MAAA;IAAA,QAGtB,CAAC,eACrB;MAAS,SAAS,EAAC,OAAO;MAAE,OAAO,EAAIJ,KAAK,IAAG;QAC5CJ,MAAM,CAACI,KAAK,CAACC,MAAM,CAAC;QACpBX,UAAU,CAACN,GAAG,CAACS,MAAM,GAAC,CAAC,CAAC;MAAA,CACvB;MAAA,UAAE;IAAG;MAAA;MAAA;MAAA;IAAA,QAAU;EAAA;IAAA;IAAA;IAAA;EAAA,QACb;AAGP;AAAC,GAvCuBV,WAAW;AAAA,KAAXA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}