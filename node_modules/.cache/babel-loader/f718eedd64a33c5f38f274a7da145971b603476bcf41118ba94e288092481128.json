{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0412\\u0438\\u043A\\u0442\\u043E\\u0440_\\u041C\\\\Desktop\\\\Phytin\\\\single_page\\\\singpe\\\\src\\\\pages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pages_count(_ref) {\n  _s();\n  let {\n    setArayCar,\n    ArayCar,\n    cars\n  } = _ref;\n  const [page, setPage] = useState([...pag.slice(0, 3)]);\n  console.log(pag, \"массив с индексами страниц\");\n  function createPages() {\n    //Функция,вычисляющая массив с индексами страницц\n    let result = [];\n    for (let i = 1; i <= Math.ceil(сars.length / 6); i++) {\n      result.push(i);\n    }\n    return result;\n  }\n  function changecars(p) {\n    //Устанавливаем в сет 6 карточек с выбранной страницы\n\n    setArayCar([...cars.slice(p * 6, p * 6 + 6)]);\n    if (page.includes(p + 1) && p > 0 && p + 1 < pag.length) {\n      console.log(pag);\n      console.log([p, p + 1, p + 2], \"после нажатяи кнопки\");\n      setPage([p, p + 1, p + 2]);\n    } else if (p === 0) setPage([1, 2, 3]);else if (p === pag.length - 1) setPage([pag.length - 2, pag.length - 1, pag.length]);\n  }\n  function createPages() {\n    //Вычисляем массив с индексами страницц\n    let result = [];\n    for (let i = 1; i <= ArayCar.length; i++) {\n      result.push(i);\n    }\n    return result;\n  }\n  function change(p) {\n    //Замена цвета в выбранном номере\n    try {\n      document.querySelector(\".selected_page\").className = \"pages\";\n    } catch {}\n    if (p.className == \"pages\") p.className = \"selected_page\";else p.className = \"pages\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pages\",\n      onClick: event => {\n        change(event.target);\n        changecars(0);\n      },\n      children: \"<\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 1\n    }, this), page.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pages\",\n      onClick: event => {\n        change(event.target);\n        changecars(Number(item) - 1);\n        //changeCount(Number(item)-1)\n      },\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 26\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pages\",\n      onClick: event => {\n        change(event.target);\n        changecars(pag.length - 1);\n      },\n      children: \">\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 1\n  }, this);\n}\n_s(Pages_count, \"67DKrMFrWuBCBDo+A80+CdDFe4k=\");\n_c = Pages_count;\nvar _c;\n$RefreshReg$(_c, \"Pages_count\");","map":{"version":3,"names":["React","useState","useEffect","Pages_count","setArayCar","ArayCar","cars","page","setPage","pag","slice","console","log","createPages","result","i","Math","ceil","сars","length","push","changecars","p","includes","change","document","querySelector","className","event","target","map","item","index","Number"],"sources":["C:/Users/Виктор_М/Desktop/Phytin/single_page/singpe/src/pages.js"],"sourcesContent":["import React,{useState,useEffect} from \"react\";\r\n\r\n\r\nexport default function Pages_count({setArayCar,ArayCar,cars}){\r\n    const [page,setPage]=useState([...pag.slice(0,3)])  \r\n console.log(pag, \"массив с индексами страниц\")\r\n\r\n\r\n\r\n\r\n\r\n function createPages(){               //Функция,вычисляющая массив с индексами страницц\r\n    let result=[]\r\n     for(let i=1;i<=Math.ceil(сars.length/6);i++){\r\n      result.push(i)\r\n     }\r\n   return result\r\n  }\r\n\r\n    function changecars(p){                //Устанавливаем в сет 6 карточек с выбранной страницы\r\n    \r\nsetArayCar([...cars.slice(p*6,(p*6)+6)])\r\n     if(page.includes(p+1) && p>0 && p+1<pag.length)  {\r\n        console.log(pag)\r\n        console.log([p,p+1,p+2],\"после нажатяи кнопки\")\r\n     setPage([p,p+1,p+2]) \r\n     }\r\n     else if(p===0) setPage([1,2,3])\r\n     else if(p===pag.length-1) setPage([pag.length-2,pag.length-1,pag.length])\r\n     \r\n    }\r\n\r\n    function createPages(){               //Вычисляем массив с индексами страницц\r\n        let result=[]\r\n         for(let i=1;i<=ArayCar.length;i++){\r\n          result.push(i)\r\n         }\r\n       return result\r\n      }\r\n\r\n\r\n    function change(p){                                                     //Замена цвета в выбранном номере\r\n        try{\r\n            document.querySelector(\".selected_page\").className=\"pages\"\r\n        }\r\n        catch{}\r\n        if(p.className==\"pages\") p.className=\"selected_page\"\r\n        else p.className=\"pages\"\r\n    }\r\n    return (\r\n<div>\r\n<button className=\"pages\"  onClick={ (event)=>{ \r\n    change(event.target)\r\n    changecars(0)}\r\n    }>{\"<\"}</button>\r\n {page.map((item,index)=><button key={index} className=\"pages\"  onClick={ (event)=>{ \r\n    change(event.target)\r\n    changecars(Number(item)-1)\r\n    //changeCount(Number(item)-1)\r\n}\r\n    }>{item}</button>)}\r\n <button  className=\"pages\"  onClick={ (event)=>{ \r\n    change(event.target)\r\n    changecars(pag.length-1)}\r\n    }>{\">\"}</button>\r\n </div>\r\n    )\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}